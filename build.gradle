plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

def allureVersion = "2.27.0"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}


repositories {
    mavenCentral()
}


compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.codeborne:selenide:7.2.1'
    testImplementation "org.slf4j:slf4j-nop:2.0.9"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation "io.qameta.allure:allure-selenide:2.27.0"

}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}


task property_test (type: Test) {
    useJUnitPlatform {
        includeTags("property")
    }
}
